// Copyright (c) Outernet Council and Contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package nmts.types.ietf;

option java_package = "org.outernetcouncil.nmts.proto.types.ietf";

// Some types derived from "ietf-yang-types" YANG module;
// see [RFC 6991](https://rfc-editor.org/rfc/rfc6991).

// From RFC 6991 [Section 3](https://rfc-editor.org/rfc/rfc6991#section-3):
//
//    "An unsigned 32-bit number expressed in the dotted-quad
//     notation, i.e., four octets written as decimal numbers
//     and separated with the '.' (full stop) character."
message DottedQuad {
  string str = 1;
}

// From RFC 6991 [Section 3](https://rfc-editor.org/rfc/rfc6991#section-3):
//
//      "The ipv6-flow-label type represents the flow identifier or Flow
//       Label in an IPv6 packet header that may be used to
//       discriminate traffic flows."
//
// See also: RFCs 6436, 6437, and 6438.
message IPv6FlowLabel {
  uint32 u20 = 1;  // Restricted to 20-bit unsigned integer values
}

// From RFC 6991 [Section 3](https://rfc-editor.org/rfc/rfc6991#section-3):
//
//    "The port-number type represents a 16-bit port number of an
//     Internet transport-layer protocol such as UDP, TCP, DCCP, or
//     SCTP.  Port numbers are assigned by IANA.  A current list of
//     all assignments is available from <http://www.iana.org/>.
//
//     Note that the port number value zero is reserved by IANA. ..."
//
// TODO: extend to `oneof` with an alternate "wellknown" port number
// type having values derived from IANA.
message PortNum {
  uint32 u16 = 1;
}

// Represents an inclusive range of `PortNum`s, i.e. [lower, upper].
message PortNumRange {
  uint32 lower = 1;
  uint32 upper = 2;
}
