// Copyright (c) Outernet Council and Contributors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

///
// Various MEF Subscriber Ethernet Service messages.
//
// Elements here are derived from MEF specifications.
// Per copyright text: "Reproduced with permission of MEF Forum."
///

syntax = "proto3";

package nmts.types.mef;

import "nmts/proto/types/mef/common.proto";

option java_package = "org.outernetcouncil.nmts.proto.types.mef";

message EVC {
  // MEF 10.4 Section 8.1 "EVC ID Service Attribute"
  Identifier45 id = 1;

  // MEF 10.4 Section 8.3 "EVC Type Service Attribute"
  enum Type {
    TYPE_UNSPECIFIED = 0;

    // MEF 6.3 Section 9.1
    // MEF 7.3 Section 11.1
    //
    // "Ethernet Private Line Service (EPL)
    //  Point-to-Point EVC, all to one bundling"
    TYPE_EPL = 1;

    // MEF 6.3 Section 9.2
    // MEF 7.3 Section 11.2
    //
    // "Ethernet Virtual Private Line (EVPL)
    //  Point-to-Point EVC, bundling and/or multiplexing"
    TYPE_EVPL = 2;

    // MEF 6.3 Section 9.3
    // MEF 7.3 Section 11.3
    //
    // "Ethernet Private LAN Service (EP-LAN)
    //  Multipoint-to-Multipoint EVC, all to one bundling";
    TYPE_EPLAN = 3;

    // MEF 6.3 Section 9.4
    // MEF 7.3 Section 11.4
    //
    // "Ethernet Virtual Private LAN Service (EVP-LAN)
    //  Multipoint-to-Multipoint EVC, bundling and/or multiplexing"
    TYPE_EVPLAN = 4;

    // MEF 6.3 Section 9.5
    // MEF 7.3 Section 11.5
    //
    // "Ethernet Private Tree Service (EP-Tree)
    //  Rooted-Multipoint EVC, all to one bundling"
    TYPE_EPTREE = 5;

    // MEF 6.3 Section 9.6
    // MEF 7.3 Section 11.6
    //
    // "Ethernet Virtual Private Tree Service (EVP-Tree)
    //  Rooted-Multipoint EVC, bundling and/or multiplexing";
    TYPE_EVPTREE = 6;
  }
  Type type = 2;

  // MEF 10.4 Section 8.2 "EVC List of EVC EPs Service Attribute"
  message EndPoint {
    // MEF 10.4 Section 10.1 "EVC EP ID Service Attribute"
    Identifier45 id = 1;

    // MEF 10.4 Section 10.3 "EVC EP Role Service Attribute"
    enum Role {
      ROLE_UNSPECIFIED = 0;
      ROLE_ROOT = 1;
      ROLE_LEAF = 2;
    }
    Role role = 2;

    // TODO: names of UNIs/interfaces are required, but should
    // be referenced by relationship (RK_*) rather than listed by
    // and identifier here.
  }
  repeated EndPoint endpoints = 3;
}
