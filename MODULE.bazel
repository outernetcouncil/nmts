# Copyright (c) Outernet Council and Contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module(name = "org_outernetcouncil_nmts")

bazel_dep(
    name = "gazelle",
    version = "0.40.0",
)
bazel_dep(
    name = "googleapis",
    version = "0.0.0-20241220-5e258e33.bcr.1",
)
bazel_dep(
    name = "protobuf",
    version = "29.2",
)
bazel_dep(
    name = "rules_go",
    version = "0.53.0",
)
bazel_dep(
    name = "grpc",
    version = "1.70.1",
)
bazel_dep(
    name = "rules_proto_grpc_cpp",
    version = "5.0.1",
)
bazel_dep(
    name = "rules_proto_grpc_java",
    version = "5.0.1",
)
bazel_dep(
    name = "rules_proto_grpc_python",
    version = "5.0.1",
)
bazel_dep(
    name = "toolchains_protoc",
    version = "0.3.7",
)
bazel_dep(
    name = "rules_buf",
    version = "0.3.0",
)
bazel_dep(name = "protovalidate", version = "0.11.1")
bazel_dep(name = "cel-cpp", version = "0.11.0", repo_name = "com_google_cel_cpp")
bazel_dep(name = "protovalidate-cc", version = "0.6.0")

git_override(
    module_name = "cel-cpp",
    commit = "030da750375d5741d71d0a193f8dd3d3cc8d7696",
    remote = "https://github.com/google/cel-cpp.git",
)

git_override(
    module_name = "protovalidate-cc",
    commit = "ad2d0117ecf660f13f1c5f1d3a864ed6042a6f65",
    remote = "https://github.com/bufbuild/protovalidate-cc.git",
)

bazel_dep(
    name = "rules_jvm_external",
    version = "6.6",
)

bazel_dep(name = "googleapis-python", version = "1.0.0")

maven_deps = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven_deps.artifact(
    artifact = "protovalidate",
    group = "build.buf",
    version = "0.5.0",
)
use_repo(maven_deps, "maven")

# Configure the protoc toolchain used by rules_proto_grpc to use protoc v28.0.
# This ensures that the version agrees with the protobuf dependency version,
# which is necessary because Protobuf C++ requires an exact match between its
# generated code version and its runtime version.
# (https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp)
protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")
protoc.toolchain(
    google_protobuf = "com_google_protobuf",
    version = "v29.1",
)

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(
    version = "1.24.0",
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "build_buf_gen_go_bufbuild_protovalidate_protocolbuffers_go",
    "com_github_bufbuild_protovalidate_go",
    "com_github_deckarep_golang_set_v2",
    "com_github_google_go_cmp",
    "com_github_ichiban_prolog",
    "com_github_samber_lo",
    "com_github_urfave_cli_v2",
    "org_golang_google_genproto",
    "org_golang_google_protobuf",
    "org_golang_x_text",
)

switched_rules = use_extension("@googleapis//:extensions.bzl", "switched_rules")
switched_rules.use_languages(
    cc = True,
    java = True,
    python = True,
)
