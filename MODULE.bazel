# Copyright (c) Outernet Council and Contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

module(name = "org_outernetcouncil_nmts")

bazel_dep(
    name = "gazelle",
    version = "0.39.1",
)

bazel_dep(
    name = "googleapis",
    version = "0.0.0-20240326-1c8d509c5",
)

bazel_dep(
    name = "protobuf",
    version = "28.0-rc2",
)

archive_override(
    module_name = "protobuf",
    integrity = "sha256-l5AnIzg33Or5J0AueJJh5G1P+HzkWz44vosVxKH2lqM=",
    strip_prefix = "protobuf-28.0",
    urls = "https://github.com/protocolbuffers/protobuf/releases/download/v28.0/protobuf-28.0.zip",
)

bazel_dep(
    name = "rules_go",
    version = "0.49.0",
)

bazel_dep(
    name = "rules_proto_grpc_cpp",
    version = "5.0.0",
)

bazel_dep(
    name = "rules_proto_grpc_java",
    version = "5.0.0",
)

bazel_dep(
    name = "rules_proto_grpc_python",
    version = "5.0.0",
)

bazel_dep(
    name = "toolchains_protoc",
    version = "0.3.3",
)

# This override is necessary to prevent bzlmod from resolving grpc-java to a
# version impacted by https://github.com/grpc/grpc-java/issues/11275.
single_version_override(
    module_name = "grpc-java",
    version = "1.64.0",
)

# Configure the protoc toolchain used by rules_proto_grpc to use protoc v28.0.
# This ensures that the version agrees with the protobuf dependency version,
# which is necessary because Protobuf C++ requires an exact match between its
# generated code version and its runtime version.
# (https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp)
protoc = use_extension("@toolchains_protoc//protoc:extensions.bzl", "protoc")

protoc.toolchain(
    google_protobuf = "com_google_protobuf",
    version = "v28.0",
)

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

go_sdk.download(
    version = "1.23.0",
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")

go_deps.from_file(go_mod = "//:go.mod")

use_repo(
    go_deps,
    "com_github_ichiban_prolog",
    "com_github_urfave_cli_v2",
    "org_golang_google_genproto",
    "org_golang_google_protobuf",
)

switched_rules = use_extension("@googleapis//:extensions.bzl", "switched_rules")

switched_rules.use_languages(
    cc = True,
    java = True,
    python = True,
)
